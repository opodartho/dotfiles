fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i


# Plugins
export ZPLUG_HOME=/usr/local/opt/zplug
if [[ -d $ZPLUG_HOME ]];then
  source $ZPLUG_HOME/init.zsh

  zplug "zplug/zplug"
  zplug "zsh-users/zsh-autosuggestions"
  zplug "opodartho/arc"
  zplug "zsh-users/zsh-syntax-highlighting", defer:3
  zplug "eendroroy/zed-zsh"

  # Install plugins if there are plugins that have not been installed
  if ! zplug check --verbose; then
    zplug install
  fi

  zplug load
fi

# config rbenv
if [[ -d ~/.rbenv/bin ]]; then
  export RBENV_ROOT=~/.rbenv
  export PATH="$RBENV_ROOT/bin:$PATH"
  eval "$(rbenv init -)"
fi

if [[ -d ~/.pyenv/bin ]]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

if [[ -d ~/.nodenv/bin ]]; then
  export PATH="$HOME/.nodenv/bin:$PATH"
  eval "$(nodenv init -)"
fi

if [[ -d ~/.exenv/bin ]]; then
  export PATH="$HOME/.exenv/bin:$PATH"
  eval "$(exenv init -)"
fi

if [[ -d $HOME/.goenv/bin ]]; then
  export GOENV_ROOT="$HOME/.goenv"
  export PATH="$GOENV_ROOT/bin:$PATH"
  eval "$(goenv init -)"
  export GOPATH="$HOME/gocode"
  export PATH="$GOPATH/bin:$PATH"
fi

if [[ -d $HOME/.erlenv/bin ]]; then
  export PATH="$HOME/.erlenv/bin:$PATH"
  eval "$(erlenv init -)"
fi

# add .local/bin into path
if [[ -d $HOME/.local/bin ]]; then
  export PATH="${HOME}/.local/bin:$PATH"
fi

# export cargo path into environment

if [[ -d $HOME/.cargo/bin ]]; then
  export PATH="${HOME}/.cargo/bin:$PATH"
fi

# set default editor
export EDITOR='vim'

# load aliases
source $HOME/.dotfiles/zsh/aliases.zsh

# tmuxinator completion
source $HOME/.dotfiles/zsh/tmuxinator.zsh

# neovim
export PATH="$HOME/neovim/bin:$PATH"

# gpg key id
export GPGKEY=1861B081

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# enable history
export HISTFILE=~/.zsh_history
export HISTSIZE=10000000
export SAVEHIST=10000000

# kubectl autocomplete
if [ $commands[kubectl] ]; then
  source <(kubectl completion zsh)
fi

# only for building LFS
export LFS=/mnt/lfs

# aws cli auto complete
if which aws_completer > /dev/null; then
  source $(dirname $(which aws_completer))/aws_zsh_completer.sh
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
